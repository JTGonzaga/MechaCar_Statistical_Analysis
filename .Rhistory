load("~/Desktop/Data Analysis Boot Camp/Module 15/R_Analysis/01_Demo/.RData")
ggplot(mtcars,aes(x=wt)) + geom_density() #visualize distribution using density plot
library(ggplot2)
ggplot(mtcars,aes(x=wt)) + geom_density() #visualize distribution using density plot
> shapiro.test(mtcars$wt)
shapiro.test(mtcars$wt)
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
setwd("~/Desktop/Data Analysis Boot Camp/Module 15/R_Analysis/01_Demo")
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
population_table <- read.csv('used_car_data.csv',check.names = F,stringsAsFactors = F) #import used car dataset
plt <- ggplot(population_table,aes(x=log10(Miles_Driven))) #import dataset into ggplot2
plt + geom_density() #visualize distribution using density plot
sample_table <- population_table %>% sample_n(50) #randomly sample 50 data points
t.test(log10(sample_table$Miles_Driven),mu=mean(log10(population_table$Miles_Driven))) #compare sample versus population means
View(mpg_summary)
?t.test()
mpg_data <- read.csv('mpg_modified.csv') #import dataset
mpg_1999 <- mpg_data %>% filter(year==1999) #select only data points where the year is 1999
library(dplyr)
mpg_1999 <- mpg_data %>% filter(year==1999) #select only data points where the year is 1999
mpg_2008 <- mpg_data %>% filter(year==2008) #select only data points where the year is 2008
t.test(mpg_1999$hwy,mpg_2008$hwy,paired = T) #compare the mean difference between two samples
mtcars_filt <- mtcars[,c("hp","cyl")] #filter columns from mtcars dataset
mtcars_filt$cyl <- factor(mtcars_filt$cyl) #convert numeric column to factor
aov(hp ~ cyl,data=mtcars_filt) #compare means across multiple levels
summary(aov(hp ~ cyl,data=mtcars_filt))
head(mtcars)
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() #create scatter plot
cor(mtcars$hp,mtcars$qsec) #calculate correlation coefficient
used_cars <- read.csv('used_car_data.csv',stringsAsFactors = F) #read in dataset
head(used_cars)
plt <- ggplot(used_cars,aes(x=Miles_Driven,y=Selling_Price)) #import dataset into ggplot2
plt + geom_point() #create a scatter plot
cor(used_cars$Miles_Driven,used_cars$Selling_Price) #calculate correlation coefficient
used_matrix <- as.matrix(used_cars[,c("Selling_Price","Present_Price","Miles_Driven")]) #convert data frame into numeric matrix
cor(used_matrix)
lm(qsec ~ hp,mtcars) #create linear model
summary(lm(qsec~hp,mtcars)) #summarize linear model
model <- lm(qsec ~ hp,mtcars) #create linear model
yvals <- model$coefficients['hp']*mtcars$hp +
model$coefficients['(Intercept)'] #determine y-axis values from linear model
plt <- ggplot(mtcars,aes(x=hp,y=qsec)) #import dataset into ggplot2
plt + geom_point() + geom_line(aes(y=yvals), color = "red") #plot scatter and linear model
lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars) #generate multiple linear regression model
summary(lm(qsec ~ mpg + disp + drat + wt + hp,data=mtcars)) #generate summary statistics
table(mpg$class,mpg$year) #generate contingency table
tbl <- table(mpg$class,mpg$year) #generate contingency table
chisq.test(tbl) #compare categorical distributions
setwd("~/Desktop/Data Analysis Boot Camp/Module 15/MechaCar_Statistical_Analysis")
library(dplyr)
MechaCar_mpg <- read.csv(file='MechaCar_mpg.csv')
View(MechaCar_mpg)
head(MechaCar_mpg)
lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = MechaCar_mpg)
summary(lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD, data = MechaCar_mpg))
Suspension_coil <- read.csv(file = 'Suspension_coil.csv')
head(Suspension_coil)
View(Suspension_coil)
total_summary <- Suspension_coil %>% group_by(condition) %>% summarize(Mean = mean(PSI),
Median = median(PSI),
Variance = var(PSI),
SD = sd(PSI)
)
# creating table
total_summary <- Suspension_coil %>% summarize(Mean = mean(PSI),
Median = median(PSI),
Variance = var(PSI),
SD = sd(PSI)
)
total_summary
View(total_summary)
lot_summary <- Suspension_coil %>% group_by(Manufacturing_Lot) %>% summarize(Mean = mean(PSI),
Median = median(PSI),
Variance = var(PSI),
SD = sd(PSI)
)
View(lot_summary)
t.test(Suspension_coil$PSI, mu = 1500)
t.test(subset(Suspension_coil, Manufacturing_lot == 'Lot1')$PSI, mu = 1500)
t.test(subset(Suspension_coil, Manufacturing_lot == 'Lot2')$PSI, mu = 1500)
t.test(subset(Suspension_coil, Manufacturing_lot == 'Lot3')$PSI, mu = 1500)
t.test(subset(lot_summary, Manufacturing_lot == 'Lot1')$PSI, mu = 1500)
t.test(subset(lot_summary, Manufacturing_lot == 'Lot2')$PSI, mu = 1500)
t.test(subset(lot_summary, Manufacturing_lot == 'Lot3')$PSI, mu = 1500)
t.test(subset(Suspension_coil, Manufacturing_Lot == 'Lot1')$PSI, mu = 1500)
t.test(subset(Suspension_coil, Manufacturing_Lot == 'Lot2')$PSI, mu = 1500)
t.test(subset(Suspension_coil, Manufacturing_Lot == 'Lot3')$PSI, mu = 1500)
